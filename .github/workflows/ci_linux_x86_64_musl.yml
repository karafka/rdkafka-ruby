name: CI Linux x86_64 musl

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [ main, master ]
  push:
    branches: [ main, master ]
  schedule:
    - cron: '0 1 * * *'

permissions:
  contents: read

env:
  BUNDLE_RETRY: 6
  BUNDLE_JOBS: 4

jobs:
  build_install:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    container:
      image: alpine:3.22@sha256:4bcff63911fcb4448bd4fdacec207030997caf25e9bea4045fa6c8c44de311d1
    steps:
      - name: Install dependencies
        run: |
          apk add --no-cache git curl ca-certificates build-base linux-headers \
            pkgconf perl autoconf automake libtool bison flex file \
            ruby ruby-dev ruby-bundler bash zstd-dev zlib zlib-dev openssl-dev cyrus-sasl-dev
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Configure git safe directory
        run: git config --global --add safe.directory /__w/karafka-rdkafka/karafka-rdkafka
      - name: Build gem with mini_portile
        run: |
          set -e
          bundle config set --local path 'vendor/bundle'
          bundle install
          cd ext && bundle exec rake
          cd ..
      - name: Upload built gem and bundle
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: rdkafka-built-gem-musl
          path: |
            vendor/bundle/
            .bundle/
            ext/
            lib/
          retention-days: 1

  specs_install:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: build_install
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - '3.4'
          - '3.3'
          - '3.2'
          - '3.1'
        include:
          - ruby: '3.4'
            coverage: 'true'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Download built gem
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: rdkafka-built-gem-musl
          path: ./
      - name: Start Kafka with Docker Compose
        run: |
          docker compose up -d
          echo "Waiting for Kafka to be ready..."
          sleep 10

          for i in {1..30}; do
            if docker compose exec -T kafka kafka-topics --bootstrap-server localhost:9092 --list >/dev/null 2>&1; then
              echo "Kafka topics command succeeded!"
              break
            fi
            sleep 2
          done
      - name: Run all specs
        env:
          GITHUB_COVERAGE: ${{ matrix.coverage }}
          RDKAFKA_EXT_PATH: ${{ github.workspace }}/ext
        run: |
          docker run --rm \
            --network host \
            -v "${{ github.workspace }}:/workspace" \
            -w /workspace \
            -e "GITHUB_COVERAGE=${{ matrix.coverage }}" \
            -e "RDKAFKA_EXT_PATH=/workspace/ext" \
            ruby:${{ matrix.ruby }}-alpine \
            sh -c 'apk add --no-cache git build-base linux-headers bash \
              cyrus-sasl \
              cyrus-sasl-login \
              cyrus-sasl-crammd5 \
              cyrus-sasl-digestmd5 \
              cyrus-sasl-gssapiv2 \
              cyrus-sasl-scram \
              krb5-libs \
              openssl \
              zlib \
              zlib-dev \
              zstd-libs && \
              git config --global --add safe.directory /workspace && \
              bundle config set --local path vendor/bundle && \
              bundle install && \
              bundle exec ruby -S rspec'
  build_precompiled:
    timeout-minutes: 45
    runs-on: ubuntu-latest
    container:
      image: alpine:3.22@sha256:4bcff63911fcb4448bd4fdacec207030997caf25e9bea4045fa6c8c44de311d1
    steps:
      - name: Install dependencies
        run: |
          apk add --no-cache git curl ca-certificates build-base linux-headers \
            pkgconf perl autoconf automake libtool bison flex file bash wget zstd-dev \
            openssl-dev cyrus-sasl-dev cyrus-sasl cyrus-sasl-login \
            cyrus-sasl-crammd5 cyrus-sasl-digestmd5 cyrus-sasl-gssapiv2 cyrus-sasl-scram \
            krb5-libs openssl zlib zlib-dev zstd-libs
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Configure git safe directory
        run: git config --global --add safe.directory /__w/karafka-rdkafka/karafka-rdkafka
      - name: Cache build-tmp directory
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: ext/build-tmp-musl
          key: build-tmp-musl-${{ runner.os }}-${{ hashFiles('ext/*.sh', 'ext/Rakefile') }}-v2
      - name: Build precompiled librdkafka.so
        run: |
          cd ext
          bash ./build_linux_x86_64_musl.sh
      - name: Upload precompiled library
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: librdkafka-precompiled-musl
          path: ext/
          retention-days: 1

  specs_precompiled:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    needs: build_precompiled
    strategy:
      fail-fast: false
      matrix:
        ruby:
          - '3.4'
          - '3.3'
          - '3.2'
          - '3.1'
        include:
          - ruby: '3.4'
            coverage: 'true'
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
      - name: Download precompiled library
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: librdkafka-precompiled-musl
          path: ext/
      - name: Start Kafka with Docker Compose
        run: |
          docker compose up -d
          echo "Waiting for Kafka to be ready..."
          sleep 10

          for i in {1..30}; do
            if docker compose exec -T kafka kafka-topics --bootstrap-server localhost:9092 --list >/dev/null 2>&1; then
              echo "Kafka topics command succeeded!"
              break
            fi
            sleep 2
          done
      - name: Run specs with precompiled library
        env:
          GITHUB_COVERAGE: ${{ matrix.coverage }}
          RDKAFKA_EXT_PATH: ${{ github.workspace }}/ext
        run: |
          docker run --rm \
            --network host \
            -v "${{ github.workspace }}:/workspace" \
            -w /workspace \
            -e "GITHUB_COVERAGE=${{ matrix.coverage }}" \
            -e "RDKAFKA_EXT_PATH=/workspace/ext" \
            ruby:${{ matrix.ruby }}-alpine \
            sh -c 'apk add --no-cache git build-base linux-headers bash && git config --global --add safe.directory /workspace && bundle config set --local path vendor/bundle && bundle install && bundle exec ruby -S rspec'
